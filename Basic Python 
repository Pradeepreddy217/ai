{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNZimB+6GONuuOhklMcUzGv",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Pradeepreddy217/ai/blob/main/Basic%20Python%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gpeBE21jP-Le",
        "outputId": "97e88eb4-a34a-4318-98f4-e9661e6a773c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100\n",
            "200.0\n",
            "Pradeep\n",
            "1\n",
            "1\n",
            "1\n",
            "(12, 200, 'pradeep')\n",
            "(12, 200, 'pradeep')\n",
            "(12, 200, 'pradeep')\n",
            "hello world\n",
            "llo world\n",
            "llo\n",
            "h\n",
            "hello worldhello world\n",
            "['abcd', 34, 2.3, 'jump']\n",
            "abcd\n",
            "[34, 2.3]\n",
            "jump\n",
            "['abcd', 34, 2.3, 'jump', 122, 'jump']\n",
            "('abc', 34, 'Pradeep')\n",
            "abc\n",
            "('abc', 34, 'Pradeep')\n",
            "('abc', 34, 'Pradeep')\n",
            "this is one \n",
            "this is two\n",
            "{'name': 'pradeep', 'code': '4357', 'dept': 'CSE'}\n",
            "dict_keys(['name', 'code', 'dept'])\n",
            "dict_values(['pradeep', '4357', 'CSE'])\n",
            "4357\n",
            "Line 1 - Value of c is  31\n",
            "Line 2 - Value of c is  11\n",
            "Line 3 - Value of c is  210\n",
            "Line 4 - Value of c is  2.1\n",
            "Line 5 - Value of c is  1\n",
            "Line 6 - Value of c is  8\n",
            "Line 7 - Value of c is  2\n",
            "Line 1 - a is not equal to b\n",
            "Line 2 - a is not equal to b\n",
            "Line 3 - a is not less than b\n",
            "Line 4 - a is greater than b\n",
            "Line 5 - a is either less than or equal to b\n",
            "Line 6 - b is either greater than or equal to b\n",
            "Line 1 - Value of c is  31\n",
            "Line 2 - Value of c is  52\n",
            "Line 3 - Value of c is  1092\n",
            "Line 4 - Value of c is  52.0\n",
            "Line 5 - Value of c is  2\n",
            "Line 6 - Value of c is  2097152\n",
            "Line 7 - Value of c is  99864\n"
          ]
        }
      ],
      "source": [
        "counter = 100 #An integer assignment  (in line comments)\n",
        "miles = 200.0 # aa floating point\n",
        "name = \"Pradeep\" # string\n",
        "a = b = c = 1\n",
        "d = e = f = 12, 200, \"pradeep\"\n",
        "print (counter)\n",
        "print (miles)\n",
        "print (name)\n",
        "print(a)\n",
        "print(b)\n",
        "print(c)\n",
        "print(d)\n",
        "print(e)\n",
        "print(f)\n",
        "\n",
        "\n",
        "#strings (#title comments#)\n",
        "\n",
        "str =  \"hello world\"\n",
        "\n",
        "print(str)\n",
        "\n",
        "print(str[2:])\n",
        "print(str[2:5])\n",
        "print(str[0])\n",
        "print(str * 2)\n",
        "\n",
        "\n",
        "#list\n",
        "\n",
        "list = ['abcd',34,2.3,'jump']\n",
        "tinylist = [122,'jump']\n",
        "print(list)\n",
        "print(list[0])\n",
        "print(list[1:3])\n",
        "print(tinylist[1])\n",
        "print(list + tinylist)\n",
        "\n",
        "#tuples\n",
        "tuple = ('abc',34,'Pradeep')\n",
        "print(tuple)\n",
        "print(tuple[0])\n",
        "print(tuple[0:])\n",
        "print(tuple[0:3])\n",
        "\n",
        "#dictionary\n",
        "\n",
        "dict = {}\n",
        "dict ['one'] = \"this is one \"\n",
        "dict [2] = \"this is two\"\n",
        "tiny_dict = {'name': 'pradeep','code':'4357','dept':'CSE'}\n",
        "print(dict['one'])\n",
        "print(dict[2])\n",
        "print(tiny_dict)\n",
        "print(tiny_dict.keys()) # print all keys\n",
        "print(tiny_dict.values()) #print all values\n",
        "print(tiny_dict['code'])\n",
        "\n",
        "# operator\n",
        "a = 21\n",
        "b = 10\n",
        "c = 0\n",
        "c = a + b\n",
        "print (\"Line 1 - Value of c is \", c)\n",
        "c = a - b\n",
        "print (\"Line 2 - Value of c is \", c )\n",
        "c = a * b\n",
        "print (\"Line 3 - Value of c is \", c)\n",
        "c = a / b\n",
        "print (\"Line 4 - Value of c is \", c )\n",
        "c = a % b\n",
        "print (\"Line 5 - Value of c is \", c)\n",
        "a = 2\n",
        "b = 3\n",
        "c = a**b\n",
        "print (\"Line 6 - Value of c is \", c)\n",
        "a = 10\n",
        "b = 5\n",
        "c = a//b\n",
        "print (\"Line 7 - Value of c is \", c)\n",
        "\n",
        "\n",
        "# condition statement (if and else)\n",
        "a = 21\n",
        "b = 10\n",
        "if ( a == b ):\n",
        " print (\"Line 1 - a is equal to b\")\n",
        "else:\n",
        "  print (\"Line 1 - a is not equal to b\")\n",
        "if ( a != b ):\n",
        " print (\"Line 2 - a is not equal to b\")\n",
        "else:\n",
        " print (\"Line 2 - a is equal to b\")\n",
        "if ( a < b ):\n",
        " print (\"Line 3 - a is less than b\" )\n",
        "else:\n",
        " print (\"Line 3 - a is not less than b\")\n",
        "if ( a > b ):\n",
        " print (\"Line 4 - a is greater than b\")\n",
        "else:\n",
        " print (\"Line 4 - a is not greater than b\")\n",
        "a,b=b,a #values of a and b swapped. a becomes 10, b becomes 21\n",
        "if ( a <= b ):\n",
        " print (\"Line 5 - a is either less than or equal to b\")\n",
        "else:\n",
        " print (\"Line 5 - a is neither less than nor equal to b\")\n",
        "if ( b >= a ):\n",
        " print (\"Line 6 - b is either greater than or equal to b\")\n",
        "else:\n",
        " print (\"Line 6 - b is neither greater than nor equal to b\")\n",
        "\n",
        "\n",
        "#logical operator\n",
        "\n",
        "a = 21\n",
        "b = 10\n",
        "c = 0\n",
        "c = a + b\n",
        "print (\"Line 1 - Value of c is \", c)\n",
        "c += a\n",
        "print (\"Line 2 - Value of c is \", c )\n",
        "c *= a\n",
        "print (\"Line 3 - Value of c is \", c )\n",
        "c /= a\n",
        "print (\"Line 4 - Value of c is \", c )\n",
        "c = 2\n",
        "c %= a\n",
        "print (\"Line 5 - Value of c is \", c)\n",
        "c **= a\n",
        "print (\"Line 6 - Value of c is \", c)\n",
        "c //= a\n",
        "print (\"Line 7 - Value of c is \", c)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# membership Operator\n",
        "\n",
        "a = 10\n",
        "b = 20\n",
        "list = [1, 2, 3, 4, 5 ]\n",
        "if ( a in list ):\n",
        " print (\"Line 1 - a is available in the given list\")\n",
        "else:\n",
        " print (\"Line 1 - a is not available in the given list\")\n",
        "if ( b not in list ):\n",
        " print (\"Line 2 - b is not available in the given list\")\n",
        "else:\n",
        " print (\"Line 2 - b is available in the given list\")\n",
        "if ( c in list ):\n",
        " print (\"Line 3 - a is available in the given list\")\n",
        "else:\n",
        "  print (\"Line 3 - a is not available in the given list\")\n",
        "\n",
        "#my own example for condition statement.\n",
        "\n",
        "num1 = 20\n",
        "num2 = 40\n",
        "num1 += num2\n",
        "if (num1 == num2):\n",
        "  print(\"num1 is equal to num2\")\n",
        "else:\n",
        "  print(\"num1 is not equal to num2\")\n",
        "print(num1)\n",
        "\n",
        "# if statement\n",
        "\n",
        "var1 = 100\n",
        "if var1:\n",
        " print (\"1 - Got a true expression value\")\n",
        " print (var1)\n",
        "var2 = 0\n",
        "if var2:\n",
        " print (\"2 - Got a true expression value\")\n",
        " print (var2)\n",
        "print (\"Good bye!\")\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aQmDR1YD4z09",
        "outputId": "fd22acfc-fd15-494b-a62b-54c74f77a9cb"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Line 1 - a is not available in the given list\n",
            "Line 2 - b is not available in the given list\n",
            "Line 3 - a is not available in the given list\n",
            "num1 is not equal to num2\n",
            "60\n",
            "1 - Got a true expression value\n",
            "100\n",
            "Good bye!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "amount=int(input(\"Enter amount: \"))\n",
        "if amount<1000:\n",
        " discount=amount*0.10\n",
        " print (\"Discount\",discount)\n",
        "else:\n",
        " discount=amount*0.20\n",
        " print (\"Discount\",discount)\n",
        "print (\"Net payable:\",amount-discount)\n",
        "\n",
        "\n",
        "# my own example\n",
        "\n",
        "rate = int(input(\"enter the rate:\"))\n",
        "if rate<2000:\n",
        "  discount = rate * 0.10\n",
        "  print(\"discount\",discount)\n",
        "else:\n",
        "  discount=rate * 0.20\n",
        "  print('discount',discount)\n",
        "print(\"total amount:\" ,rate-discount)\n",
        "\n",
        "#elif statement\n",
        "\n",
        "amount=int(input(\"Enter amount: \"))\n",
        "if amount<1000:\n",
        " discount=amount*0.05\n",
        " print (\"Discount\",discount)\n",
        "elif amount<5000:\n",
        " discount=amount*0.10\n",
        " print (\"Discount\",discount)\n",
        "else:\n",
        " discount=amount*0.15\n",
        " print (\"Discount\",discount)\n",
        "print (\"Net payable:\",amount-discount)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lGhFPWxt_v8b",
        "outputId": "febad82f-e191-4744-a590-9a874aedff70"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter amount: 3000\n",
            "Discount 600.0\n",
            "Net payable: 2400.0\n",
            "enter the rate:3000\n",
            "discount 600.0\n",
            "total amount: 2400.0\n",
            "Enter amount: 10000\n",
            "Discount 1500.0\n",
            "Net payable: 8500.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from os import EX_DATAERR\n",
        "#loops\n",
        "count = 0\n",
        "while (count <= 20):\n",
        " print ('The count is:', count)\n",
        " count = count + 2\n",
        "print (\"Good bye!\")\n",
        "\n",
        "#loop\n",
        "mom = \"did you eat the meal..?\"\n",
        "print(mom)\n",
        "sam = input(\"enter the sam response:\")\n",
        "if (sam == \"yes mom i had the meal!!\"):\n",
        "  print(\"good\")\n",
        "else :\n",
        "  print(\"No, mom not yet!!\")\n",
        "  print(\"Go and eat honey..\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EkEXVO-mIKvU",
        "outputId": "c34d25b4-d316-4622-fcf9-f458ed8d0b03"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The count is: 0\n",
            "The count is: 2\n",
            "The count is: 4\n",
            "The count is: 6\n",
            "The count is: 8\n",
            "The count is: 10\n",
            "The count is: 12\n",
            "The count is: 14\n",
            "The count is: 16\n",
            "The count is: 18\n",
            "The count is: 20\n",
            "Good bye!\n",
            "did you eat the meal..?\n",
            "enter the sam response:yes mom i had the meal!!\n",
            "good\n"
          ]
        }
      ]
    }
  ]
}